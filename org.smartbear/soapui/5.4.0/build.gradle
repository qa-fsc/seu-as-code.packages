buildscript {
    repositories {
        mavenCentral()
		maven { 
			url 'https://dl.bintray.com/seu-as-code/maven'
		}
    }
    dependencies {
        classpath 'de.undercouch:gradle-download-task:2.0.0'
    }
}
plugins {
	id 'de.undercouch.download' version '1.2'
    id 'de.qaware.seu.as.code.credentials' version '2.4.0'    
    id 'de.qaware.seu.as.code.platform' version '1.0.0'
}

apply plugin: 'base'
apply plugin: 'maven-publish'

import de.undercouch.gradle.tasks.download.Download
import org.apache.tools.ant.filters.ReplaceTokens

platform{
	win {
		ext.baseUrl="https://s3.amazonaws.com/downloads.eviware/soapuios/${version}/SoapUI-${version}-windows-bin.zip"
	}
	mac {
		ext.baseUrl="https://s3.amazonaws.com/downloads.eviware/soapuios/${version}/SoapUI-${version}-mac-bin.zip"
	}
	unix {
		ext.baseUrl="https://s3.amazonaws.com/downloads.eviware/soapuios/${version}/SoapUI-${version}-linux-bin.tar.gz"
	}
}

task downloadArchive(type: Download) {
	src {baseUrl}
	dest buildDir
}

task extractArchive(type: Copy, dependsOn: downloadArchive) {
	platform {
		win {
			from {zipTree("$buildDir/SoapUI-${version}-windows-bin.zip") }
			into "$buildDir/files/"
		}
		mac {
			from {zipTree("$buildDir/SoapUI-${version}-mac-bin.zip") }
			into "$buildDir/files/"
		}
		unix {
			from {zipTree("$buildDir/SoapUI-${version}-linux-bin.zip") }
			into "$buildDir/files/"
		}
	}
}

task renameDirectory(dependsOn: extractArchive) {
    doLast {
        file("$buildDir/files/SoapUI-${version}").renameTo(file("$buildDir/files/soapui2-${version}"))
		file("$buildDir/files/soapui2-${version}").renameTo(file("$buildDir/files/soapui-${version}"))
    }
}

task customize(type: Copy, dependsOn: renameDirectory) {
	from("files") {
		filter(ReplaceTokens, tokens: [version: project.version])
	}
	into "$buildDir/files"
}

task buildPackage(type: Jar, dependsOn: customize) {
	baseName project.name
	version version
    classifier osClassifier
	extension 'jar'
	destinationDir buildDir
	from "$buildDir/files"
}


publishing {
  publications {
		packagePublication(MavenPublication) {
			artifact buildPackage
		}
  }
	repositories {
		maven {
			url = project.hasProperty('nexusUrl') ? project.nexusUrl : ''
			credentials {	
				if(project.credentials.get("nexus")!=null){
					username = project.credentials.get('nexus').username
					password = project.credentials.get('nexus').password
				}
				else {
					username = project.hasProperty('nexusUsername') ? project.nexusUsername : ''
					password = project.hasProperty('nexusPassword') ? project.nexusPassword : ''
				} 					
			}
		}
    }
}
